(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{327:function(t,n){t.exports="\t\n\v\f\r                　\u2028\u2029\ufeff"},328:function(t,n,e){"use strict";var s=e(4),i=e(329).trim;s({target:"String",proto:!0,forced:e(330)("trim")},{trim:function(){return i(this)}})},329:function(t,n,e){var s=e(2),i=e(28),a=e(22),o=e(327),c=s("".replace),v="["+o+"]",l=RegExp("^"+v+v+"*"),d=RegExp(v+v+"*$"),r=function(t){return function(n){var e=a(i(n));return 1&t&&(e=c(e,l,"")),2&t&&(e=c(e,d,"")),e}};t.exports={start:r(1),end:r(2),trim:r(3)}},330:function(t,n,e){var s=e(81).PROPER,i=e(3),a=e(327);t.exports=function(t){return i((function(){return!!a[t]()||"​᠎"!=="​᠎"[t]()||s&&a[t].name!==t}))}},614:function(t,n,e){"use strict";e.r(n);e(328),e(27),e(80);var s=e(0),i=e(331),a=e.n(i);e(332);s.a.use(a.a);var o={name:"m-toast",data:function(){return{codeshow:!1,show:!1,type:"",message:"",code:',\n<template>\n  <div class="demo-popup">\n    <div class="demo-title">基本用法</div>\n    <div class="demo-container">\n      <div class="demo-example-margin">\n        <sv-button @click.native="test" type="info">弹出窗口</sv-button>\n      </div>\n    </div>\n    <div class="demo-title">自定义图标</div>\n    <div class="demo-container">\n      <div class="demo-example-margin">\n        <sv-button @click.native="test1" type="info">成功提示</sv-button>\n      </div>\n      <div class="demo-example-margin">\n        <sv-button @click.native="test2" type="info">失败提示</sv-button>\n      </div>\n    </div>\n    <div class="demo-title">加载中</div>\n    <div class="demo-container">\n      <div class="demo-example-margin">\n        <sv-button @click.native="test3" type="info">弹出窗口</sv-button>\n      </div>\n      <div class="demo-example-margin">\n        <sv-button @click.native="test4" type="info">弹出窗口</sv-button>\n      </div>\n    </div>\n    <div class="demo-title">引入当作组件使用</div>\n    <div class="demo-container">\n      <div class="demo-example-margin">\n        <sv-button @click.native="test5" type="info">弹出窗口</sv-button>\n      </div>\n    </div>\n    <sv-toast v-model="value">很高兴看到你</sv-toast>\n  </div>\n</template>\n\nexport default {\n  data() {\n    return {\n      value: false\n    }\n  },\n  methods: {\n    test() {\n      this.$toast({\n        type: \'icon\',\n        message:\n          \'大家早上好，大家中午好，大家晚上好，大家早上好，大家中午好，大家晚上好\'\n      })\n    },\n    test1() {\n      this.$toast({\n        type: \'icon\',\n        icon: \'success\',\n        message: \'大家晚上好\'\n      })\n    },\n    test2() {\n      this.$toast({\n        type: \'icon\',\n        icon: \'warn\',\n        message: \'未知错误\'\n      })\n    },\n    test3() {\n      this.$toast({\n        type: \'loading\',\n        loadingType: \'circle\',\n        message: \'加载中\'\n      })\n    },\n    test4() {\n      this.$toast({\n        type: \'loading\',\n        loadingType: \'spot\',\n        message: \'加载中\'\n      })\n    },\n    test5() {\n      this.value = true\n    }\n  }\n}\t\t\n'.replace(/^ {8}/gm,"").trim()}}},c=e(50),v=Object(c.a)(o,(function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("div",[e("layout-card",[e("div",[e("layout-column",{attrs:{title:"代码演示",url:"toast",tips:"查看源代码"},on:{handle:function(n){t.show=!0}}})],1)]),t._v(" "),e("div",{staticClass:"file-blank"}),t._v(" "),e("layout-card",[e("div",{staticClass:"site-introduce"},[e("div",{staticClass:"site-introduce-title"},[t._v("介绍")]),t._v(" "),e("div",{staticClass:"site-introduce-text"},[e("p",[t._v("我们默认：当你引入本组件时，我们会在vue实例上面挂载一个$toast方法，作为全局使用")]),t._v(" "),e("p",[t._v("同样的，你也可以在每个组件内引入")]),t._v(" "),e("p",[t._v("当我们在组件内当作component使用时，message可以当作slot传入，详细得例子见源代码")])])])]),t._v(" "),e("layout-code",{attrs:{title:"搜索"},model:{value:t.show,callback:function(n){t.show=n},expression:"show"}},[e("pre",{directives:[{name:"highlightjs",rawName:"v-highlightjs"}]},[e("code",{staticClass:"vue"},[t._v(t._s(t.code))])])])],1)}),[],!1,null,null,null);n.default=v.exports}}]);