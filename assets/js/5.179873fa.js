(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{327:function(e,t){e.exports="\t\n\v\f\r                　\u2028\u2029\ufeff"},328:function(e,t,n){"use strict";var r=n(4),s=n(329).trim;r({target:"String",proto:!0,forced:n(330)("trim")},{trim:function(){return s(this)}})},329:function(e,t,n){var r=n(2),s=n(28),i=n(22),o=n(327),a=r("".replace),l="["+o+"]",u=RegExp("^"+l+l+"*"),v=RegExp(l+l+"*$"),c=function(e){return function(t){var n=i(s(t));return 1&e&&(n=a(n,u,"")),2&e&&(n=a(n,v,"")),n}};e.exports={start:c(1),end:c(2),trim:c(3)}},330:function(e,t,n){var r=n(81).PROPER,s=n(3),i=n(327);e.exports=function(e){return s((function(){return!!i[e]()||"​᠎"!=="​᠎"[e]()||r&&i[e].name!==e}))}},602:function(e,t,n){"use strict";n.r(t);n(328),n(27),n(80);var r=n(0),s=n(331),i=n.n(s);n(332);r.a.use(i.a);var o={data:function(){return{codeshow:!1,show:!1,type:"",message:"",code:',\n<template>\n  <div>\n    <div class="demo-title">表单验证</div>\n    <div class="demo-container">\n      <sv-form :resolve="resolve" ref="svform">\n        <sv-write\n          label="姓名"\n          :required="true"\n          type="text"\n          placeholder="请输入姓名"\n          errmessage="姓名为必填项"\n          v-model="value1"\n          right-icon="edit"\n          left-icon="records"\n        ></sv-write>\n        <sv-write\n          label="手机号码"\n          :required="true"\n          type="text"\n          placeholder="请输入您的手机号码"\n          errmessage="请输入正确的手机号"\n          :regexp="telReg"\n          v-model="value2"\n          right-icon="phone"\n        ></sv-write>\n        <sv-write\n          label="可选项"\n          type="text"\n          placeholder="很高兴看到你"\n          v-model="value3"\n          right-icon="calendar"\n        ></sv-write>\n      </sv-form>\n    </div>\n\n    <div class="demo-btn-container">\n      <sv-button @click.native="cli">提交</sv-button>\n      <sv-button @click.native="ouput">other</sv-button>\n    </div>\n  </div>\n</template>\n\n\nimport { mapMutations } from \'vuex\'\nexport default {\n  data() {\n    return {\n      value1: \'\',\n      value2: \'1760128620\',\n      value3: \'\',\n      telReg: /^[1][3,4,5,7,8][0-9]{9}$/,\n      resolve: {}\n    }\n  },\n  methods: {\n    ...mapMutations({\n      commitRoute: \'changeRoute\'\n    }),\n    cli(val) {\n      this.resolve.then().then(res => {\n        const results = res.every(result => result.state)\n        if (results) {\n          alert(\'提交成功\')\n        } else {\n          for (let i = 0; i < res.length; i++) {\n            if (res[i].state === false) {\n              alert(res[i].message)\n              return\n            }\n          }\n        }\n      })\n    },\n    ouput() {\n      const arr = this.$refs.svform.getStates()\n      console.log(arr)\n    }\n  }\n}\n\n'.replace(/^ {8}/gm,"").trim()}}},a=n(50),l=Object(a.a)(o,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[n("layout-card",[n("div",[n("layout-column",{attrs:{title:"代码演示",url:"form",tips:"查看源代码"},on:{handle:function(t){e.show=!0}}})],1)]),e._v(" "),n("div",{staticClass:"file-blank"}),e._v(" "),n("layout-card",[n("div",{staticClass:"site-introduce"},[n("div",{staticClass:"site-introduce-title"},[e._v("介绍")]),e._v(" "),n("div",{staticClass:"site-introduce-text"},[n("p",[e._v("为了保持组件的灵活性，我们并没有在form组件内部去内置按钮，并以按钮去获取内部子组件验证状态(state)")]),e._v(" "),n("p",[e._v("您可以给Form组件设置ref属性，并以getStates方法获得子组件所有属性")]),e._v(" "),n("p",[e._v("但其实以ref获得并非我本意，因此我们提供了一个prop参数，以回调的形式返回验证结果（看右侧示例)")]),e._v(" "),n("p",[e._v("您也可以自己封装组件来配合我们的form组件")])])])]),e._v(" "),n("layout-code",{attrs:{title:"搜索"},model:{value:e.show,callback:function(t){e.show=t},expression:"show"}},[n("pre",{directives:[{name:"highlightjs",rawName:"v-highlightjs"}]},[n("code",{staticClass:"vue"},[e._v(e._s(e.code))])])])],1)}),[],!1,null,null,null);t.default=l.exports}}]);